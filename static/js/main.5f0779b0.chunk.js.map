{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","company","catchPhrase","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","handlechange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAGL,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,QACnB,+CAAkBP,EAAMI,QAAQI,QAAQC,mBCPjCC,G,MAAW,SAAAV,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACGD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJdQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAd,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCCG,G,wDAvCb,aAAe,IAAD,8BACZ,gBAgBFC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,qDAWd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAM7C,WAAU,IAAD,SAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA7B,GAAO,OAC9CA,EAAQE,KAAK4B,cAAcC,SAASb,EAAYc,wBAGlD,OACE,sBAAKnC,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACEa,YAAY,kBACZC,aAAc,SAAAK,GAAM,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,WAE1D,cAAC,EAAD,CAAUb,SAAUqB,W,GAlCVK,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5f0779b0.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = props => (\n    <div className='card-container'>\n      <img \n        alt='monster' \n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        />\n      {/* <h1> {props.monster.name} </h1> */}\n      <h2>{props.monster.name}</h2>\n      <h2>{props.monster.email}</h2>\n      <h2>Catchphrase: {props.monster.company.catchPhrase}</h2>\n    </div>\n)","import React from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css'\n\nexport const CardList = props => (\n    <div className='card-list'>\n      {props.monsters.map(monster => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n);\n\n","\nimport React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input \n    className='search'\n    type='search' \n    placeholder={placeholder} \n    onChange={handleChange}\n  />\n)","import React, { Component } from \"react\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\n\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport \"./App.css\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = { \n      monsters: [],\n      searchField: '',\n    };\n    // The below function would normally bind the handlechange function to \"this\".\n    // this.handlechange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {  \n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n \n  handlechange = e => {\n    this.setState({ searchField: e.target.value})\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      );\n\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n        placeholder='Search Monsters' \n        handleChange={e => {this.setState({ searchField: e.target.value})}}\n      />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}